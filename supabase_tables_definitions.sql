-- This file contains the SQL commands to create the tables and policies for the database.

------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------

-- Table: providers
-- Step 0: Define policies
create table public.providers (
  provider_id bigint not null,
  provider_name text null,
  address text null,
  description text null,
  zipcode bigint null,
  county text null,
  "BBB" text null,
  date_intake_form timestamp without time zone not null,
  programs_available text null,
  constraint providers_pkey primary key (provider_id, date_intake_form)
) TABLESPACE pg_default;

-- Step 1: Define policies
CREATE POLICY "Allow insert for anon" ON providers FOR INSERT TO anon WITH CHECK (true);
CREATE POLICY "Allow update for anon" ON providers FOR UPDATE TO anon USING (true) WITH CHECK (true);
CREATE POLICY "Allow anon to select" ON providers FOR SELECT TO anon USING (true);
-- 
-- Step 2: Enable RLS
ALTER TABLE providers ENABLE ROW LEVEL SECURITY;

------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------

-- Table: programs
-- Step 0: Define policies
create table public.programs (
  program_id bigint generated by default as identity not null,
  program_name text not null,
  website text null,
  contact_name text null,
  contact_email text null,
  services text null,
  core_audience_ecosystem text null,
  core_audience_entrepreneur text null,
  core_audience_startups text null,
  core_audience_sme text null,
  core_audience_ustudents text null,
  core_audience_k12students text null,
  growth_stage_discovery smallint null,
  growth_stage_early smallint null,
  growth_stage_growth smallint null,
  growth_stage_mature smallint null,
  verticals text null,
  product_type text null,
  provider_id bigint null,
  provider_name text null,
  date_intake_form timestamp without time zone not null,
  core_audience_all text null,
  scraped_description text null,
  constraint programs_pkey primary key (program_id, date_intake_form),
  constraint programs_provider_id_date_intake_form_fkey foreign KEY (provider_id, date_intake_form) references providers (provider_id, date_intake_form)
) TABLESPACE pg_default;

-- Step 1: Define policies
CREATE POLICY "Allow insert for anon" ON programs FOR INSERT TO anon WITH CHECK (true);
CREATE POLICY "Allow update for anon" ON programs FOR UPDATE TO anon USING (true) WITH CHECK (true);
CREATE POLICY "Allow anon to select" ON programs FOR SELECT TO anon USING (true);
-- 
-- Step 2: Enable RLS
ALTER TABLE programs ENABLE ROW LEVEL SECURITY;

------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------

-- Table: entrepreneurs
-- Step 0: Define policies
create table public.entrepreneurs (
  entrepreneur_id bigint not null,
  date_intake timestamp without time zone not null,
  name text null,
  business_name text null,
  email text null,
  phone text null,
  address text null,
  zipcode bigint null,
  website text null,
  profile text null,
  growth_stage text null,
  vertical text null,
  county text null,
  constraint entrepreneurs_pkey primary key (entrepreneur_id, date_intake)
) TABLESPACE pg_default;

-- Step 1: Define policies
CREATE POLICY "Allow insert for anon" ON entrepreneurs FOR INSERT TO anon WITH CHECK (true);
CREATE POLICY "Allow update for anon" ON entrepreneurs FOR UPDATE TO anon USING (true) WITH CHECK (true);
CREATE POLICY "Allow anon to select" ON entrepreneurs FOR SELECT TO anon USING (true);
-- 
-- Step 2: Enable RLS
ALTER TABLE entrepreneurs ENABLE ROW LEVEL SECURITY;

------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------

-- Table: entrepreneur_needs
-- Step 0: Define policies
create table public.entrepreneur_needs (
  entrepreneur_id bigint generated by default as identity not null,
  date_intake timestamp without time zone not null,
  service text null,
  need text not null,
  constraint entrepreneur_needs_pkey primary key (entrepreneur_id, date_intake, need),
  constraint entrepreneur_needs_entrepreneur_id_date_intake_fkey foreign KEY (entrepreneur_id, date_intake) references entrepreneurs (entrepreneur_id, date_intake)
) TABLESPACE pg_default;

-- Step 1: Define policies
CREATE POLICY "Allow insert for anon" ON entrepreneur_needs FOR INSERT TO anon WITH CHECK (true);
CREATE POLICY "Allow update for anon" ON entrepreneur_needs FOR UPDATE TO anon USING (true) WITH CHECK (true);
CREATE POLICY "Allow anon to select" ON entrepreneur_needs FOR SELECT TO anon USING (true);
-- 
-- Step 2: Enable RLS
ALTER TABLE entrepreneur_needs ENABLE ROW LEVEL SECURITY;

------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------

-- Table: needs_match
-- Step 0: Define policies
create table public.needs_match (
  entrepreneur_id bigint not null,
  provider_id bigint not null,
  program_name text null,
  need_statisfied text not null,
  growth_score numeric null,
  identity_score numeric null,
  service_score numeric null,
  need_satisfaction_score numeric null,
  explanation text null,
  final_score numeric null,
  date time with time zone not null,
  constraint needs_match_pkey primary key (
    entrepreneur_id,
    provider_id,
    need_statisfied,
    date
  )
) TABLESPACE pg_default;

-- Step 1: Define policies
CREATE POLICY "Allow insert for anon" ON needs_match FOR INSERT TO anon WITH CHECK (true);
CREATE POLICY "Allow update for anon" ON needs_match FOR UPDATE TO anon USING (true) WITH CHECK (true);
CREATE POLICY "Allow anon to select" ON needs_match FOR SELECT TO anon USING (true);
-- 
-- Step 2: Enable RLS
ALTER TABLE needs_match ENABLE ROW LEVEL SECURITY;

------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------

-- Table: metrics
-- Step 0: Define policies
create table public.metrics (
  metric_id bigint generated by default as identity not null,
  metric_name text not null,
  metric_value numeric null,
  report_date timestamp without time zone null,
  entrepreneur_id bigint null,
  constraint metrics_pkey primary key (metric_id)
) TABLESPACE pg_default;

-- Step 1: Define policies
CREATE POLICY "Allow insert for anon" ON metrics FOR INSERT TO anon WITH CHECK (true);
CREATE POLICY "Allow update for anon" ON metrics FOR UPDATE TO anon USING (true) WITH CHECK (true);
CREATE POLICY "Allow anon to select" ON metrics FOR SELECT TO anon USING (true);
-- 
-- Step 2: Enable RLS
ALTER TABLE metrics ENABLE ROW LEVEL SECURITY;

------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------